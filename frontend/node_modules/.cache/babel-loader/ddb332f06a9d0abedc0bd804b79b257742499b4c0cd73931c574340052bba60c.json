{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/ForumTopic.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport '../css/ForumTopic.css'; // Import CSS\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Connect to Socket.IO\n\nfunction ForumTopic() {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the topic ID from the URL\n  const [topic, setTopic] = useState(null);\n  const [posts, setPosts] = useState([]); // Initialize posts as an empty array\n  const [newPost, setNewPost] = useState('');\n  const [loading, setLoading] = useState(true); // Add a loading state\n\n  useEffect(() => {\n    const fetchTopicData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/topics/${id}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch topic data');\n        }\n        const data = await response.json();\n        setTopic(data);\n        setPosts(data.Posts || []); // Ensure posts are an array, even if empty\n        setLoading(false); // Stop loading when data is fetched\n      } catch (error) {\n        console.error('Error fetching topic:', error);\n        setLoading(false); // Stop loading even if there's an error\n      }\n    };\n    fetchTopicData();\n\n    // Listen for new posts via Socket.IO\n    socket.on('newPost', post => {\n      setPosts(prevPosts => [post, ...prevPosts]);\n    });\n    return () => {\n      socket.off('newPost'); // Clean up the socket event listener\n    };\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('You must be logged in to post.');\n      return;\n    }\n\n    // Post the new comment to the server\n    try {\n      const response = await fetch(`http://localhost:5000/api/topics/${id}/posts`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          content: newPost\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to post the message');\n      }\n      setNewPost(''); // Clear the input after submission\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }, this); // Show loading while fetching the topic\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forum-topic\",\n    children: topic && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topic-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: topic.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: topic.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"posts-list\",\n        children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"post-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Posted by: \", post.User ? post.User.username : 'Anonymous', \" at \", new Date(post.createdAt).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 37\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No posts yet. Be the first to comment!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"new-post-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write your post...\",\n          value: newPost,\n          onChange: e => setNewPost(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(ForumTopic, \"g9c3J7RCOsegcPAwDBDOZ9d3EY8=\", false, function () {\n  return [useParams];\n});\n_c = ForumTopic;\nexport default ForumTopic;\nvar _c;\n$RefreshReg$(_c, \"ForumTopic\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","ForumTopic","_s","id","topic","setTopic","posts","setPosts","newPost","setNewPost","loading","setLoading","fetchTopicData","response","fetch","ok","Error","data","json","Posts","error","console","on","post","prevPosts","off","handleSubmit","e","preventDefault","token","localStorage","getItem","alert","method","headers","body","JSON","stringify","content","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","description","length","map","User","username","Date","createdAt","toLocaleString","onSubmit","placeholder","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["/app/src/pages/ForumTopic.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport '../css/ForumTopic.css';  // Import CSS\n\nconst socket = io('http://localhost:5000');  // Connect to Socket.IO\n\nfunction ForumTopic() {\n    const { id } = useParams();  // Get the topic ID from the URL\n    const [topic, setTopic] = useState(null);\n    const [posts, setPosts] = useState([]);  // Initialize posts as an empty array\n    const [newPost, setNewPost] = useState('');\n    const [loading, setLoading] = useState(true);  // Add a loading state\n\n    useEffect(() => {\n        const fetchTopicData = async () => {\n            try {\n                const response = await fetch(`http://localhost:5000/api/topics/${id}`);\n                if (!response.ok) {\n                    throw new Error('Failed to fetch topic data');\n                }\n                const data = await response.json();\n                setTopic(data);\n                setPosts(data.Posts || []);  // Ensure posts are an array, even if empty\n                setLoading(false);  // Stop loading when data is fetched\n            } catch (error) {\n                console.error('Error fetching topic:', error);\n                setLoading(false);  // Stop loading even if there's an error\n            }\n        };\n\n        fetchTopicData();\n\n        // Listen for new posts via Socket.IO\n        socket.on('newPost', (post) => {\n            setPosts((prevPosts) => [post, ...prevPosts]);\n        });\n\n        return () => {\n            socket.off('newPost');  // Clean up the socket event listener\n        };\n    }, [id]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const token = localStorage.getItem('token');\n        if (!token) {\n            alert('You must be logged in to post.');\n            return;\n        }\n\n        // Post the new comment to the server\n        try {\n            const response = await fetch(`http://localhost:5000/api/topics/${id}/posts`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({ content: newPost })\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to post the message');\n            }\n\n            setNewPost('');  // Clear the input after submission\n        } catch (error) {\n            alert(error.message);\n        }\n    };\n\n    if (loading) {\n        return <div className=\"loading\">Loading...</div>;  // Show loading while fetching the topic\n    }\n\n    return (\n        <div className=\"forum-topic\">\n            {topic && (\n                <>\n                    <div className=\"topic-header\">\n                        <h2>{topic.title}</h2>\n                        <p>{topic.description}</p>\n                    </div>\n\n                    <ul className=\"posts-list\">\n                        {posts.length > 0 ? (\n                            posts.map((post) => (\n                                <li key={post.id} className=\"post-item\">\n                                    <p>{post.content}</p>\n                                    <small>\n                                        Posted by: {post.User ? post.User.username : 'Anonymous'} at {new Date(post.createdAt).toLocaleString()}\n                                    </small>\n                                </li>\n                            ))\n                        ) : (\n                            <p>No posts yet. Be the first to comment!</p>\n                        )}\n                    </ul>\n\n                    <form onSubmit={handleSubmit} className=\"new-post-form\">\n                        <textarea\n                            placeholder=\"Write your post...\"\n                            value={newPost}\n                            onChange={(e) => setNewPost(e.target.value)}\n                            required\n                        />\n                        <button type=\"submit\">Post</button>\n                    </form>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default ForumTopic;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}