{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/ForumTopic.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport '../css/ForumTopic.css'; // Import CSS\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction ForumTopic() {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the topic ID from the URL\n  const [topic, setTopic] = useState(null);\n  const [posts, setPosts] = useState([]); // Initialize posts as an empty array\n  const [newPost, setNewPost] = useState('');\n  const [replyPost, setReplyPost] = useState(null); // To store the post ID we're replying to\n  const [newReply, setNewReply] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchTopicData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/topics/${id}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch topic data');\n        }\n        const data = await response.json();\n        setTopic(data);\n        setPosts(data.Posts || []); // Ensure posts are loaded\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching topic:', error);\n        setLoading(false);\n      }\n    };\n    fetchTopicData();\n    socket.on('newPost', post => {\n      // Check if the new post is a reply or a main post\n      if (post.parentId) {\n        // It's a reply, so find the parent post and update it with the reply\n        setPosts(prevPosts => prevPosts.map(p => p.id === post.parentId ? {\n          ...p,\n          Replies: [...(p.Replies || []), post]\n        } : p));\n      } else {\n        // It's a normal post\n        setPosts(prevPosts => [post, ...prevPosts]);\n      }\n    });\n    return () => {\n      socket.off('newPost');\n    };\n  }, [id]);\n  const handleSubmitPost = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('You must be logged in to post.');\n      return;\n    }\n    const response = await fetch(`http://localhost:5000/api/topics/${id}/posts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        content: newPost\n      })\n    });\n    if (response.ok) {\n      setNewPost(''); // Clear the input after submission\n    }\n  };\n  const handleReplySubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('You must be logged in to reply.');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/topics/${id}/posts`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          content: newReply,\n          parentId: replyPost\n        }) // Ensure parentId is sent\n      });\n      if (response.ok) {\n        setReplyPost(null); // Clear the reply state\n        setNewReply(''); // Clear the reply input\n      }\n    } catch (error) {\n      console.log('Error submitting reply:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forum-topic\",\n    children: topic && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topic-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: topic.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: topic.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"posts-list\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"post-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Posted by: \", post.User ? post.User.username : 'Anonymous', \" at \", new Date(post.createdAt).toLocaleString(), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reply-button\",\n              onClick: () => setReplyPost(post.id),\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this), post.Replies && post.Replies.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"replies-list\",\n            children: post.Replies.map(reply => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"reply-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: reply.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Replied by: \", reply.User ? reply.User.username : 'Anonymous', \" at \", new Date(reply.createdAt).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 49\n              }, this)]\n            }, reply.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 37\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), replyPost && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleReplySubmit,\n        className: \"new-reply-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write your reply...\",\n          value: newReply,\n          onChange: e => setNewReply(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitPost,\n        className: \"new-post-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write your post...\",\n          value: newPost,\n          onChange: e => setNewPost(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n_s(ForumTopic, \"fWhkpns+mihxCne+cie/P62prhg=\", false, function () {\n  return [useParams];\n});\n_c = ForumTopic;\nexport default ForumTopic;\nvar _c;\n$RefreshReg$(_c, \"ForumTopic\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","ForumTopic","_s","id","topic","setTopic","posts","setPosts","newPost","setNewPost","replyPost","setReplyPost","newReply","setNewReply","loading","setLoading","fetchTopicData","response","fetch","ok","Error","data","json","Posts","error","console","on","post","parentId","prevPosts","map","p","Replies","off","handleSubmitPost","e","preventDefault","token","localStorage","getItem","alert","method","headers","body","JSON","stringify","content","handleReplySubmit","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","description","User","username","Date","createdAt","toLocaleString","onClick","length","reply","onSubmit","placeholder","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["/app/src/pages/ForumTopic.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport '../css/ForumTopic.css';  // Import CSS\n\nconst socket = io('http://localhost:5000');\n\nfunction ForumTopic() {\n    const { id } = useParams();  // Get the topic ID from the URL\n    const [topic, setTopic] = useState(null);\n    const [posts, setPosts] = useState([]);  // Initialize posts as an empty array\n    const [newPost, setNewPost] = useState('');\n    const [replyPost, setReplyPost] = useState(null);  // To store the post ID we're replying to\n    const [newReply, setNewReply] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchTopicData = async () => {\n            try {\n                const response = await fetch(`http://localhost:5000/api/topics/${id}`);\n                if (!response.ok) {\n                    throw new Error('Failed to fetch topic data');\n                }\n                const data = await response.json();\n                setTopic(data);\n                setPosts(data.Posts || []);  // Ensure posts are loaded\n                setLoading(false);\n            } catch (error) {\n                console.error('Error fetching topic:', error);\n                setLoading(false);\n            }\n        };\n\n        fetchTopicData();\n\n        socket.on('newPost', (post) => {\n            // Check if the new post is a reply or a main post\n            if (post.parentId) {\n                // It's a reply, so find the parent post and update it with the reply\n                setPosts(prevPosts => \n                    prevPosts.map(p => \n                        p.id === post.parentId \n                            ? { ...p, Replies: [...(p.Replies || []), post] } \n                            : p\n                    )\n                );\n            } else {\n                // It's a normal post\n                setPosts(prevPosts => [post, ...prevPosts]);\n            }\n        });\n\n        return () => {\n            socket.off('newPost');\n        };\n    }, [id]);\n\n    const handleSubmitPost = async (e) => {\n        e.preventDefault();\n        const token = localStorage.getItem('token');\n        if (!token) {\n            alert('You must be logged in to post.');\n            return;\n        }\n\n        const response = await fetch(`http://localhost:5000/api/topics/${id}/posts`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({ content: newPost })\n        });\n\n        if (response.ok) {\n            setNewPost('');  // Clear the input after submission\n        }\n    };\n\n    const handleReplySubmit = async (e) => {\n        e.preventDefault();\n        const token = localStorage.getItem('token');\n        if (!token) {\n            alert('You must be logged in to reply.');\n            return;\n        }\n\n        try {\n            const response = await fetch(`http://localhost:5000/api/topics/${id}/posts`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({ content: newReply, parentId: replyPost })  // Ensure parentId is sent\n            });\n\n            if (response.ok) {\n                setReplyPost(null);  // Clear the reply state\n                setNewReply('');  // Clear the reply input\n            }\n        } catch (error) {\n            console.log('Error submitting reply:', error);\n        }\n    };\n\n    if (loading) {\n        return <div className=\"loading\">Loading...</div>;\n    }\n\n    return (\n        <div className=\"forum-topic\">\n            {topic && (\n                <>\n                    <div className=\"topic-header\">\n                        <h2>{topic.title}</h2>\n                        <p>{topic.description}</p>\n                    </div>\n\n                    <ul className=\"posts-list\">\n                        {posts.map((post) => (\n                            <li key={post.id} className=\"post-item\">\n                                <p>{post.content}</p>\n                                <small>\n                                    Posted by: {post.User ? post.User.username : 'Anonymous'} at {new Date(post.createdAt).toLocaleString()}\n                                    <button\n                                        className=\"reply-button\"\n                                        onClick={() => setReplyPost(post.id)}\n                                    >\n                                        Reply\n                                    </button>\n                                </small>\n\n                                {/* Display replies if they exist */}\n                                {post.Replies && post.Replies.length > 0 && (\n                                    <ul className=\"replies-list\">\n                                        {post.Replies.map((reply) => (\n                                            <li key={reply.id} className=\"reply-item\">\n                                                <p>{reply.content}</p>\n                                                <small>\n                                                    Replied by: {reply.User ? reply.User.username : 'Anonymous'} at {new Date(reply.createdAt).toLocaleString()}\n                                                </small>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                )}\n                            </li>\n                        ))}\n                    </ul>\n\n                    {/* Show reply form if a post is selected for replying */}\n                    {replyPost && (\n                        <form onSubmit={handleReplySubmit} className=\"new-reply-form\">\n                            <textarea\n                                placeholder=\"Write your reply...\"\n                                value={newReply}\n                                onChange={(e) => setNewReply(e.target.value)}\n                                required\n                            />\n                            <button type=\"submit\">Reply</button>\n                        </form>\n                    )}\n\n                    {/* New post form */}\n                    <form onSubmit={handleSubmitPost} className=\"new-post-form\">\n                        <textarea\n                            placeholder=\"Write your post...\"\n                            value={newPost}\n                            onChange={(e) => setNewPost(e.target.value)}\n                            required\n                        />\n                        <button type=\"submit\">Post</button>\n                    </form>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default ForumTopic;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}