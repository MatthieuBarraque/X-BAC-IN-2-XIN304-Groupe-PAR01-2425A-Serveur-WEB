{"ast":null,"code":"var _jsxFileName = \"/app/src/components/CreateTopicForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/CreateTopicForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateTopicForm() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setMessageType('error');\n      setMessage('You must be logged in to create a topic.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/topics', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          title,\n          description\n        })\n      });\n      const responseData = await response.json();\n      console.log('API response:', responseData);\n      if (response.ok) {\n        setMessageType('success');\n        setMessage('Topic created successfully!');\n        setTitle('');\n        setDescription('');\n      } else {\n        setMessageType('error');\n        setMessage('Failed to create the topic.');\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage('Failed to create the topic. Please check your connection.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"create-topic-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Topic Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Topic Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `message ${messageType}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateTopicForm, \"btpKQ3k7JHmVa//JlRtlgRH4nog=\");\n_c = CreateTopicForm;\nexport default CreateTopicForm;\nvar _c;\n$RefreshReg$(_c, \"CreateTopicForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateTopicForm","_s","title","setTitle","description","setDescription","message","setMessage","messageType","setMessageType","handleSubmit","e","preventDefault","token","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","responseData","json","console","log","ok","error","children","onSubmit","className","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/CreateTopicForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../css/CreateTopicForm.css';\n\nfunction CreateTopicForm() {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [message, setMessage] = useState('');\n    const [messageType, setMessageType] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n    \n        const token = localStorage.getItem('token');\n        if (!token) {\n            setMessageType('error');\n            setMessage('You must be logged in to create a topic.');\n            return;\n        }\n    \n        try {\n            const response = await fetch('http://localhost:5000/api/topics', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({ title, description })\n            });\n    \n            const responseData = await response.json();\n            console.log('API response:', responseData);\n    \n            if (response.ok) {\n                setMessageType('success');\n                setMessage('Topic created successfully!');\n                setTitle('');\n                setDescription('');\n            } else {\n                setMessageType('error');\n                setMessage('Failed to create the topic.');\n            }\n        } catch (error) {\n            setMessageType('error');\n            setMessage('Failed to create the topic. Please check your connection.');\n        }\n    };\n    \n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className=\"create-topic-form\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Topic Title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    required\n                />\n                <textarea\n                    placeholder=\"Topic Description\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    required\n                />\n                <button type=\"submit\">Create Topic</button>\n            </form>\n            {message && (\n                <p className={`message ${messageType}`}>{message}</p>\n            )}\n        </div>\n    );\n}\n\nexport default CreateTopicForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}