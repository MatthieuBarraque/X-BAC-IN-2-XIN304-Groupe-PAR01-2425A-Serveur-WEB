{"ast":null,"code":"var _jsxFileName = \"/app/src/components/CreateTopicForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateTopicForm() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('You must be logged in to create a topic.');\n      return;\n    }\n    const response = await fetch('http://localhost:5000/api/topics', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        title,\n        description\n      })\n    });\n    if (response.ok) {\n      alert('Topic created successfully');\n    } else {\n      alert('Failed to create the topic');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Topic Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Topic Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Topic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateTopicForm, \"1UKQWTfo2RWmkwPNsekAdQbvqFk=\");\n_c = CreateTopicForm;\nexport default CreateTopicForm;\nvar _c;\n$RefreshReg$(_c, \"CreateTopicForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateTopicForm","_s","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","token","localStorage","getItem","alert","response","fetch","method","headers","body","JSON","stringify","ok","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/CreateTopicForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction CreateTopicForm() {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const token = localStorage.getItem('token');\n        if (!token) {\n            alert('You must be logged in to create a topic.');\n            return;\n        }\n\n        const response = await fetch('http://localhost:5000/api/topics', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({ title, description })\n        });\n\n        if (response.ok) {\n            alert('Topic created successfully');\n        } else {\n            alert('Failed to create the topic');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                placeholder=\"Topic Title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                required\n            />\n            <textarea\n                placeholder=\"Topic Description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n            />\n            <button type=\"submit\">Create Topic</button>\n        </form>\n    );\n}\n\nexport default CreateTopicForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACRG,KAAK,CAAC,0CAA0C,CAAC;MACjD;IACJ;IAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUP,KAAK;MACpC,CAAC;MACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEjB,KAAK;QAAEE;MAAY,CAAC;IAC/C,CAAC,CAAC;IAEF,IAAIS,QAAQ,CAACO,EAAE,EAAE;MACbR,KAAK,CAAC,4BAA4B,CAAC;IACvC,CAAC,MAAM;MACHA,KAAK,CAAC,4BAA4B,CAAC;IACvC;EACJ,CAAC;EAED,oBACIb,OAAA;IAAMsB,QAAQ,EAAEf,YAAa;IAAAgB,QAAA,gBACzBvB,OAAA;MACIwB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,aAAa;MACzBC,KAAK,EAAEvB,KAAM;MACbwB,QAAQ,EAAGnB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;MAC1CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFjC,OAAA;MACIyB,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAErB,WAAY;MACnBsB,QAAQ,EAAGnB,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACoB,MAAM,CAACF,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACFjC,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEf;AAAC/B,EAAA,CA9CQD,eAAe;AAAAiC,EAAA,GAAfjC,eAAe;AAgDxB,eAAeA,eAAe;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}