{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/ForumTopic.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport '../css/ForumTopic.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Connect to Socket.IO\n\nfunction ForumTopic() {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the topic ID from the URL\n  const [topic, setTopic] = useState(null);\n  const [posts, setPosts] = useState([]); // Initialize posts as an empty array\n  const [newPost, setNewPost] = useState('');\n  useEffect(() => {\n    const fetchTopicData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/topics/${id}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch topic data');\n        }\n        const data = await response.json();\n        setTopic(data);\n        setPosts(data.Posts || []); // Ensure posts are an array, even if empty\n      } catch (error) {\n        console.error('Error fetching topic:', error);\n      }\n    };\n    fetchTopicData();\n\n    // Listen for new posts via Socket.IO\n    socket.on('newPost', post => {\n      setPosts(prevPosts => [post, ...prevPosts]);\n    });\n    return () => {\n      socket.off('newPost'); // Clean up the socket event listener\n    };\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('You must be logged in to post.');\n      return;\n    }\n\n    // Post the new comment to the server\n    try {\n      const response = await fetch(`http://localhost:5000/api/topics/${id}/posts`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          content: newPost\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to post the message');\n      }\n      setNewPost(''); // Clear the input after submission\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  if (!topic) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this); // Show loading while fetching the topic\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forum-topic\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: topic.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: topic.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"posts-list\",\n      children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Posted by: \", post.User ? post.User.username : 'Anonymous']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts yet. Be the first to comment!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"new-post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write your post...\",\n        value: newPost,\n        onChange: e => setNewPost(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(ForumTopic, \"UOB7eh4jT0gHwc2QSrAzG2mAeDQ=\", false, function () {\n  return [useParams];\n});\n_c = ForumTopic;\nexport default ForumTopic;\nvar _c;\n$RefreshReg$(_c, \"ForumTopic\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","jsxDEV","_jsxDEV","socket","ForumTopic","_s","id","topic","setTopic","posts","setPosts","newPost","setNewPost","fetchTopicData","response","fetch","ok","Error","data","json","Posts","error","console","on","post","prevPosts","off","handleSubmit","e","preventDefault","token","localStorage","getItem","alert","method","headers","body","JSON","stringify","content","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","description","length","map","User","username","onSubmit","placeholder","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["/app/src/pages/ForumTopic.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport '../css/ForumTopic.css';\n\n\nconst socket = io('http://localhost:5000');  // Connect to Socket.IO\n\nfunction ForumTopic() {\n    const { id } = useParams();  // Get the topic ID from the URL\n    const [topic, setTopic] = useState(null);\n    const [posts, setPosts] = useState([]);  // Initialize posts as an empty array\n    const [newPost, setNewPost] = useState('');\n\n    useEffect(() => {\n        const fetchTopicData = async () => {\n            try {\n                const response = await fetch(`http://localhost:5000/api/topics/${id}`);\n                if (!response.ok) {\n                    throw new Error('Failed to fetch topic data');\n                }\n                const data = await response.json();\n                setTopic(data);\n                setPosts(data.Posts || []);  // Ensure posts are an array, even if empty\n            } catch (error) {\n                console.error('Error fetching topic:', error);\n            }\n        };\n\n        fetchTopicData();\n\n        // Listen for new posts via Socket.IO\n        socket.on('newPost', (post) => {\n            setPosts((prevPosts) => [post, ...prevPosts]);\n        });\n\n        return () => {\n            socket.off('newPost');  // Clean up the socket event listener\n        };\n    }, [id]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const token = localStorage.getItem('token');\n        if (!token) {\n            alert('You must be logged in to post.');\n            return;\n        }\n\n        // Post the new comment to the server\n        try {\n            const response = await fetch(`http://localhost:5000/api/topics/${id}/posts`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({ content: newPost })\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to post the message');\n            }\n\n            setNewPost('');  // Clear the input after submission\n        } catch (error) {\n            alert(error.message);\n        }\n    };\n\n    if (!topic) {\n        return <div>Loading...</div>;  // Show loading while fetching the topic\n    }\n\n    return (\n        <div className=\"forum-topic\">\n            <h2>{topic.title}</h2>\n            <p>{topic.description}</p>\n\n            <ul className=\"posts-list\">\n                {posts.length > 0 ? (\n                    posts.map((post) => (\n                        <li key={post.id}>\n                            <p>{post.content}</p>\n                            <small>Posted by: {post.User ? post.User.username : 'Anonymous'}</small>\n                        </li>\n                    ))\n                ) : (\n                    <p>No posts yet. Be the first to comment!</p>\n                )}\n            </ul>\n\n            <form onSubmit={handleSubmit} className=\"new-post-form\">\n                <textarea\n                    placeholder=\"Write your post...\"\n                    value={newPost}\n                    onChange={(e) => setNewPost(e.target.value)}\n                    required\n                />\n                <button type=\"submit\">Post</button>\n            </form>\n        </div>\n    );\n}\n\nexport default ForumTopic;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}