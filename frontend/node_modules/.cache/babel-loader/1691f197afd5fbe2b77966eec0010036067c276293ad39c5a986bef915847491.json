{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/ForumTopic.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport '../css/ForumTopic.css'; // CSS for styling the page\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Connect to Socket.IO\n\nfunction ForumTopic() {\n  _s();\n  const [topic, setTopic] = useState(null);\n  const [posts, setPosts] = useState([]); // Initialize posts as an empty array\n  const [newPost, setNewPost] = useState(''); // Contains the content of the new post\n  const {\n    id\n  } = useParams(); // Get the topic ID from the URL\n\n  useEffect(() => {\n    // Fetch the topic with its posts\n    fetch(`http://localhost:5000/api/topics/${id}`).then(response => response.json()).then(data => {\n      if (data) {\n        setTopic(data); // Set the topic data\n        setPosts(data.Posts || []); // Ensure posts is always an array\n      }\n    }).catch(error => console.error('Failed to fetch topic:', error));\n\n    // Listen for new posts via Socket.IO\n    socket.on('newPost', post => {\n      setPosts(prevPosts => [post, ...prevPosts]); // Add new post to the beginning of the posts array\n    });\n\n    // Clean up Socket.IO events on component unmount\n    return () => {\n      socket.off('newPost');\n    };\n  }, [id]);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Call API to create a new post\n    fetch(`http://localhost:5000/api/topics/${id}/posts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}` // If authentication is required\n      },\n      body: JSON.stringify({\n        content: newPost\n      })\n    }).then(response => response.json()).then(data => {\n      setNewPost(''); // Reset the form after posting\n      setPosts(prevPosts => [data, ...prevPosts]); // Add the new post to the posts array immediately\n    }).catch(error => {\n      console.error('Failed to post:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forum-page\",\n    children: topic && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: topic.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: topic.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"posts-list\",\n        children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Posted by: \", post.User ? post.User.username : 'Anonymous']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 37\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No posts yet. Be the first to post!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"new-post-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write your post...\",\n          value: newPost,\n          onChange: e => setNewPost(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(ForumTopic, \"c5JnFFnCLHLbdueZ6fpbq3JUXzU=\", false, function () {\n  return [useParams];\n});\n_c = ForumTopic;\nexport default ForumTopic;\nvar _c;\n$RefreshReg$(_c, \"ForumTopic\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","ForumTopic","_s","topic","setTopic","posts","setPosts","newPost","setNewPost","id","fetch","then","response","json","data","Posts","catch","error","console","on","post","prevPosts","off","handleSubmit","e","preventDefault","method","headers","localStorage","getItem","body","JSON","stringify","content","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","length","map","User","username","onSubmit","placeholder","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["/app/src/pages/ForumTopic.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport '../css/ForumTopic.css';  // CSS for styling the page\n\nconst socket = io('http://localhost:5000');  // Connect to Socket.IO\n\nfunction ForumTopic() {\n    const [topic, setTopic] = useState(null);\n    const [posts, setPosts] = useState([]);  // Initialize posts as an empty array\n    const [newPost, setNewPost] = useState('');  // Contains the content of the new post\n    const { id } = useParams();  // Get the topic ID from the URL\n\n    useEffect(() => {\n        // Fetch the topic with its posts\n        fetch(`http://localhost:5000/api/topics/${id}`)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data) {\n                    setTopic(data);  // Set the topic data\n                    setPosts(data.Posts || []);  // Ensure posts is always an array\n                }\n            })\n            .catch((error) => console.error('Failed to fetch topic:', error));\n\n        // Listen for new posts via Socket.IO\n        socket.on('newPost', (post) => {\n            setPosts((prevPosts) => [post, ...prevPosts]);  // Add new post to the beginning of the posts array\n        });\n\n        // Clean up Socket.IO events on component unmount\n        return () => {\n            socket.off('newPost');\n        };\n    }, [id]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        // Call API to create a new post\n        fetch(`http://localhost:5000/api/topics/${id}/posts`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`  // If authentication is required\n            },\n            body: JSON.stringify({ content: newPost })\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                setNewPost('');  // Reset the form after posting\n                setPosts((prevPosts) => [data, ...prevPosts]);  // Add the new post to the posts array immediately\n            })\n            .catch((error) => {\n                console.error('Failed to post:', error);\n            });\n    };\n\n    return (\n        <div className=\"forum-page\">\n            {topic && (\n                <>\n                    <h2>{topic.title}</h2>\n                    <p>{topic.description}</p>\n\n                    <ul className=\"posts-list\">\n                        {posts.length > 0 ? (\n                            posts.map((post) => (\n                                <li key={post.id}>\n                                    <p>{post.content}</p>\n                                    <small>Posted by: {post.User ? post.User.username : 'Anonymous'}</small>\n                                </li>\n                            ))\n                        ) : (\n                            <p>No posts yet. Be the first to post!</p>\n                        )}\n                    </ul>\n\n                    {/* Form to post a new message */}\n                    <form onSubmit={handleSubmit} className=\"new-post-form\">\n                        <textarea\n                            placeholder=\"Write your post...\"\n                            value={newPost}\n                            onChange={(e) => setNewPost(e.target.value)}\n                            required\n                        />\n                        <button type=\"submit\">Post</button>\n                    </form>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default ForumTopic;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}